'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
// import IconSettings from 'part:@sanity/base/cog-icon'


var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _default = require('part:@sanity/components/menus/default');

var _default2 = _interopRequireDefault(_default);

var _barsIcon = require('part:@sanity/base/bars-icon');

var _barsIcon2 = _interopRequireDefault(_barsIcon);

var _thListIcon = require('part:@sanity/base/th-list-icon');

var _thListIcon2 = _interopRequireDefault(_thListIcon);

var _thLargeIcon = require('part:@sanity/base/th-large-icon');

var _thLargeIcon2 = _interopRequireDefault(_thLargeIcon);

var _plusCircleIcon = require('part:@sanity/base/plus-circle-icon');

var _plusCircleIcon2 = _interopRequireDefault(_plusCircleIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TEST_CARDS_AND_THUMBNAILS = false;

const LIST_VIEW_ITEMS = [{
  title: 'List',
  icon: _barsIcon2.default,
  action: 'setListLayout',
  key: 'default',
  divider: true
}, {
  title: 'Details',
  icon: _thListIcon2.default,
  action: 'setListLayout',
  key: 'detail'
},
// Disabled for now as it needs more work (virtual-list support, etc.)
TEST_CARDS_AND_THUMBNAILS && {
  title: 'Thumbnails (__DEV__ only)',
  icon: _thLargeIcon2.default,
  action: 'setListLayout',
  key: 'media'

},
// Disabled for now as it needs more work (virtual-list support, etc.)
TEST_CARDS_AND_THUMBNAILS && {
  title: 'Cards (__DEV__ only)',
  icon: _thLargeIcon2.default,
  action: 'setListLayout',
  key: 'card'
}, {
  title: 'Create newâ€¦',
  icon: _plusCircleIcon2.default,
  action: 'createNew',
  divider: true
}].filter(Boolean);

const NULL_COMPONENT = () => null;

class DocumentsPaneMenu extends _react2.default.PureComponent {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.handleMenuAction = item => {
      if (item.action === 'setListLayout') {
        this.props.onSetListLayout(item);
      }

      if (item.action === 'setOrdering') {
        this.props.onSetOrdering(item.ordering);
      }

      if (item.action === 'createNew') {
        this.props.onGoToCreateNew();
      }
      this.props.onMenuClose();
    }, _temp;
  }

  render() {
    const orderingOptions = this.props.orderingOptions;

    const orderingItems = orderingOptions.map(orderingOption => ({
      title: orderingOption.title,
      icon: orderingOption.icon || NULL_COMPONENT,
      ordering: orderingOption,
      action: 'setOrdering',
      key: orderingOption.name
    })).concat(LIST_VIEW_ITEMS);

    return _react2.default.createElement(_default2.default, _extends({
      onAction: this.handleMenuAction,
      items: orderingItems,
      origin: 'top-right'
    }, this.props));
  }
}
exports.default = DocumentsPaneMenu;
DocumentsPaneMenu.propTypes = {
  onSetListLayout: _propTypes2.default.func,
  onSetOrdering: _propTypes2.default.func,
  onGoToCreateNew: _propTypes2.default.func,
  onMenuClose: _propTypes2.default.func,
  orderingOptions: _propTypes2.default.array
};