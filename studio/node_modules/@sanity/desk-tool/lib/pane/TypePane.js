'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp2;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TypePane = require('./styles/TypePane.css');

var _TypePane2 = _interopRequireDefault(_TypePane);

var _router = require('part:@sanity/base/router');

var _default = require('part:@sanity/components/panes/default');

var _default2 = _interopRequireDefault(_default);

var _TypePaneItem = require('./TypePaneItem');

var _TypePaneItem2 = _interopRequireDefault(_TypePaneItem);

var _contentStylesOverride = require('./styles/contentStylesOverride.css');

var _contentStylesOverride2 = _interopRequireDefault(_contentStylesOverride);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _router.withRouterHOC)((_temp2 = _class = class TypePane extends _react2.default.PureComponent {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.renderTypePaneItem = item => {
      const selectedType = this.props.router.state.selectedType;

      const selected = item.name === selectedType;
      return _react2.default.createElement(_TypePaneItem2.default, {
        key: item.key,
        selected: selected,
        type: item,
        onClick: this.handleItemClick
      });
    }, _temp;
  }

  render() {
    var _props = this.props;
    const items = _props.items,
          router = _props.router;
    var _router$state = router.state;
    const selectedType = _router$state.selectedType,
          action = _router$state.action,
          selectedDocumentId = _router$state.selectedDocumentId;

    const isSelected = !selectedType && !action && !selectedDocumentId;

    return _react2.default.createElement(
      _default2.default,
      _extends({}, this.props, { styles: _contentStylesOverride2.default, isSelected: isSelected }),
      _react2.default.createElement(
        'ul',
        { className: _TypePane2.default.list },
        items.map((item, i) => {
          return _react2.default.createElement(
            'li',
            { key: item.key, className: _TypePane2.default.item },
            this.renderTypePaneItem(item)
          );
        })
      )
    );
  }
}, _class.propTypes = {
  items: _propTypes2.default.array, // eslint-disable-line react/forbid-prop-types
  router: _propTypes2.default.shape({
    state: _propTypes2.default.object
  })
}, _temp2));