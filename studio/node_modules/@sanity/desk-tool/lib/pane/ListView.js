'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _grid = require('part:@sanity/components/lists/grid');

var _InfiniteList = require('./InfiniteList');

var _InfiniteList2 = _interopRequireDefault(_InfiniteList);

var _ListView = require('./styles/ListView.css');

var _ListView2 = _interopRequireDefault(_ListView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ListView extends _react2.default.PureComponent {

  render() {
    var _props = this.props;
    const renderItem = _props.renderItem,
          items = _props.items,
          selectedItem = _props.selectedItem,
          listLayout = _props.listLayout,
          getItemKey = _props.getItemKey;


    switch (listLayout) {
      case 'card':
        {
          // todo: this part is disabled and deliberately *not* adjusted after lists refactoring
          return _react2.default.createElement(
            _grid.List,
            { className: _ListView2.default.cardList },
            items.map(item => {
              // const isSelected = selectedItem === item /* todo: use to decorate with selected class etc. */
              return _react2.default.createElement(
                _grid.Item,
                { key: getItemKey(item), className: _ListView2.default.cardListItem },
                renderItem(item)
              );
            })
          );
        }
      case 'media':
        {
          // todo: this part is disabled and deliberately *not* adjusted after lists refactoring
          return _react2.default.createElement(
            _grid.List,
            { className: _ListView2.default.mediaList },
            items.map(item => {
              // const isSelected = selectedItem === item /* todo: use to decorate with selected class etc. */
              return _react2.default.createElement(
                _grid.Item,
                { key: getItemKey(item), className: _ListView2.default.mediaListItem },
                renderItem(item)
              );
            })
          );
        }
      default:
        {
          return _react2.default.createElement(_InfiniteList2.default, {
            className: _ListView2.default.scroll,
            onScroll: this.props.onScroll,
            items: items,
            getItemKey: getItemKey,
            renderItem: renderItem,
            layout: listLayout,
            selectedItem: selectedItem
          });
        }
    }
  }
}
exports.default = ListView;
ListView.propTypes = {
  items: _propTypes2.default.array, // eslint-disable-line react/forbid-prop-types
  renderItem: _propTypes2.default.func,
  getItemKey: _propTypes2.default.func,
  listLayout: _propTypes2.default.oneOf(['default', 'detail', 'card', 'media']),
  selectedItem: _propTypes2.default.object,
  onScroll: _propTypes2.default.func
};
ListView.defaultProps = {
  listLayout: 'default',
  loading: false,
  items: [],
  selectedItem: null
};