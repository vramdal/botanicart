'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _class, _temp2;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _fullscreen = require('part:@sanity/components/dialogs/fullscreen');

var _fullscreen2 = _interopRequireDefault(_fullscreen);

var _spinner = require('part:@sanity/components/loading/spinner');

var _spinner2 = _interopRequireDefault(_spinner);

var _enhanceWithReferringDocuments = require('./enhanceWithReferringDocuments');

var _enhanceWithReferringDocuments2 = _interopRequireDefault(_enhanceWithReferringDocuments);

var _DocTitle = require('./DocTitle');

var _DocTitle2 = _interopRequireDefault(_DocTitle);

var _ReferringDocumentsList = require('./ReferringDocumentsList');

var _ReferringDocumentsList2 = _interopRequireDefault(_ReferringDocumentsList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _enhanceWithReferringDocuments2.default)((_temp2 = _class = class ConfirmUnpublish extends _react2.default.PureComponent {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.handleAction = action => {
      var _props = this.props;
      const onCancel = _props.onCancel,
            onConfirm = _props.onConfirm;

      if (action.name === 'confirm') {
        onConfirm();
      }
      if (action.name === 'cancel') {
        onCancel();
      }
    }, _temp;
  }

  render() {
    var _props2 = this.props;
    const isCheckingReferringDocuments = _props2.isCheckingReferringDocuments,
          referringDocuments = _props2.referringDocuments,
          draft = _props2.draft,
          published = _props2.published,
          onCancel = _props2.onCancel;


    const hasReferringDocuments = referringDocuments.length > 0;

    const canContinue = !isCheckingReferringDocuments;

    const actions = [canContinue && { name: 'confirm', title: hasReferringDocuments ? 'Try to unpublish anyway' : 'Unpublish now' }, { name: 'cancel', title: 'Cancel', kind: 'secondary' }].filter(Boolean);

    const title = isCheckingReferringDocuments ? 'Checkingâ€¦' : 'Confirm unpublish';

    return _react2.default.createElement(
      _fullscreen2.default,
      {
        isOpen: true,
        showHeader: true,
        centered: true,
        title: title,
        onClose: onCancel,
        onAction: this.handleAction,
        actions: actions
      },
      isCheckingReferringDocuments && _react2.default.createElement(_spinner2.default, { message: 'Looking for referring documents\u2026' }),
      hasReferringDocuments && _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'h3',
          null,
          'Warning: Found ',
          referringDocuments.length === 1 ? 'a document' : `${referringDocuments.length} documents`,
          ' that refers to ',
          '"',
          _react2.default.createElement(_DocTitle2.default, { document: draft || published }),
          '"'
        ),
        _react2.default.createElement(
          'p',
          null,
          'You may not be allowed to unpublish',
          ' "',
          _react2.default.createElement(_DocTitle2.default, { document: draft || published }),
          '" ',
          'as the following document',
          referringDocuments.length === 1 ? '' : 's',
          ' refers to it:'
        ),
        _react2.default.createElement(_ReferringDocumentsList2.default, { documents: referringDocuments })
      ),
      !isCheckingReferringDocuments && !hasReferringDocuments && _react2.default.createElement(
        'div',
        { style: { padding: 10 } },
        _react2.default.createElement(
          'p',
          null,
          'Are you sure you would like to unpublish the document',
          ' ',
          _react2.default.createElement(
            'strong',
            null,
            _react2.default.createElement(_DocTitle2.default, { document: draft || published })
          ),
          '?'
        ),
        _react2.default.createElement(
          'h2',
          null,
          'Careful!'
        ),
        _react2.default.createElement(
          'p',
          null,
          'If you unpublish, this document will no longer be available for the public, but it will not be deleted and can be published again later if you change your mind.'
        )
      )
    );
  }
}, _class.propTypes = {
  onCancel: _propTypes2.default.func.isRequired,
  onConfirm: _propTypes2.default.func.isRequired,
  published: _propTypes2.default.object,
  draft: _propTypes2.default.object,
  referringDocuments: _propTypes2.default.array,
  isCheckingReferringDocuments: _propTypes2.default.bool
}, _temp2));