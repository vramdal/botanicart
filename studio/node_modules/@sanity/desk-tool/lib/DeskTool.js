'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DeskTool = require('./styles/DeskTool.css');

var _DeskTool2 = _interopRequireDefault(_DeskTool);

var _SchemaPaneResolver = require('./SchemaPaneResolver');

var _SchemaPaneResolver2 = _interopRequireDefault(_SchemaPaneResolver);

var _client = require('part:@sanity/base/client');

var _client2 = _interopRequireDefault(_client);

var _router = require('part:@sanity/base/router');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _router.withRouterHOC)((_temp = _class = class DeskTool extends _react2.default.Component {

  componentWillReceiveProps(nextProps) {
    this.checkRedirect(nextProps);
  }

  componentDidMount() {
    this.checkRedirect(this.props);
  }

  checkRedirect(props) {
    const router = props.router;
    var _router$state = router.state;
    const selectedType = _router$state.selectedType,
          selectedDocumentId = _router$state.selectedDocumentId;

    if (selectedType === '*' && selectedDocumentId && selectedType) {
      this.checkType(selectedDocumentId, selectedType);
    }
  }

  checkType(documentId, expectedType) {
    if (this._checkTypeSubscription) {
      this._checkTypeSubscription.unsubscribe();
    }
    this._checkTypeSubscription = _client2.default.observable.fetch(`*[_id == "${documentId}" || _id == "drafts.${documentId}"][0]._type`).subscribe(actualType => {
      if (actualType && actualType !== expectedType) {
        const router = this.props.router;

        router.navigate(_extends({}, router.state, { selectedType: actualType }), { replace: true });
      }
    });
  }

  render() {
    const router = this.props.router;


    return _react2.default.createElement(
      'div',
      { className: _DeskTool2.default.deskTool },
      _react2.default.createElement(_SchemaPaneResolver2.default, { router: router })
    );
  }
}, _class.propTypes = {
  router: _propTypes2.default.shape({
    state: _propTypes2.default.object
  }).isRequired
}, _temp));