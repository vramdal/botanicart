'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _defaultStyle = require('part:@sanity/components/menus/default-style');

var _defaultStyle2 = _interopRequireDefault(_defaultStyle);

var _reactInk = require('react-ink');

var _reactInk2 = _interopRequireDefault(_reactInk);

var _router = require('part:@sanity/base/router');

var _reactClickOutside = require('react-click-outside');

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class StateMenu extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.state = {
      selectedItem: null
    }, this.handleClickOutside = () => {
      this.props.onClickOutside();
    }, this.handleKeyDown = event => {
      const items = this.props.items;
      const selectedItem = this.state.selectedItem;

      const currentIndex = items.indexOf(selectedItem) || 0;

      if (event.key == 'Escape' && this.props.opened) {
        this.props.onClose();
      }

      if (event.key == 'ArrowDown' && this.props.opened && currentIndex < items.length - 1) {
        this.setState({
          selectedItem: this.props.items[currentIndex + 1]
        });
      }

      if (event.key == 'ArrowUp' && this.props.opened && currentIndex > 0) {
        this.setState({
          selectedItem: this.props.items[currentIndex - 1]
        });
      }

      if (event.key == 'Enter' && this.props.opened && this.state.selectedItem) {
        const router = this.props.router; // todo: this should not be here

        router.navigate(selectedItem.linkState);
      }
    }, _temp;
  }

  componentDidMount() {
    window.addEventListener('keydown', this.handleKeyDown, false);
  }

  componentWillUnmount() {
    window.removeEventListener('keydown', this.handleKeyDown, false);
  }

  render() {
    var _props = this.props;
    const items = _props.items,
          origin = _props.origin,
          ripple = _props.ripple,
          fullWidth = _props.fullWidth,
          className = _props.className;

    const originStyle = _defaultStyle2.default[`origin__${origin}`];

    return _react2.default.createElement(
      'div',
      { className: `${this.props.opened ? _defaultStyle2.default.opened : _defaultStyle2.default.closed} ${originStyle} ${fullWidth && _defaultStyle2.default.fullWidth} ${className}` },
      _react2.default.createElement(
        'ul',
        { className: _defaultStyle2.default.list },
        items.map((item, i) => {
          const Icon = item.icon;
          return _react2.default.createElement(
            'li',
            { key: i, className: `${_defaultStyle2.default.item} ${item.divider && _defaultStyle2.default.divider}` },
            _react2.default.createElement(
              _router.StateLink,
              {
                state: item.linkState,
                className: _defaultStyle2.default.link
              },
              Icon && _react2.default.createElement(
                'span',
                { className: _defaultStyle2.default.iconContainer },
                _react2.default.createElement(Icon, { className: _defaultStyle2.default.icon })
              ),
              item.title,
              ripple && _react2.default.createElement(_reactInk2.default, null)
            )
          );
        })
      )
    );
  }
}

StateMenu.propTypes = {
  opened: _propTypes2.default.bool,
  origin: _propTypes2.default.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right']),
  ripple: _propTypes2.default.bool,
  fullWidth: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  onClickOutside: _propTypes2.default.func,
  onClose: _propTypes2.default.func,
  router: _propTypes2.default.shape({
    navigate: _propTypes2.default.func
  }),
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    title: _propTypes2.default.string.isRequired,
    icon: _propTypes2.default.func,
    linkState: _propTypes2.default.object.isRequired
  }))
};
StateMenu.defaultProps = {
  menuOpened: false,
  origin: 'top-left',
  icon: false,
  ripple: true,
  onClickOutside() {},
  onClose() {}
};
exports.default = (0, _router.withRouter)((0, _reactClickOutside2.default)(StateMenu));