'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _buttonsStyle = require('part:@sanity/components/toggles/buttons-style');

var _buttonsStyle2 = _interopRequireDefault(_buttonsStyle);

var _default = require('part:@sanity/components/buttons/default');

var _default2 = _interopRequireDefault(_default);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ITEM_SHAPE = {
  icon: _propTypes2.default.node,
  title: _propTypes2.default.string
};
class ToggleButtons extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.handleClick = event => {
      var _props = this.props;
      const onChange = _props.onChange,
            items = _props.items;

      const index = Number(event.currentTarget.getAttribute('data-index'));
      onChange(items[index]);
    }, _temp;
  }

  render() {
    var _props2 = this.props;
    const items = _props2.items,
          label = _props2.label,
          value = _props2.value;


    return _react2.default.createElement(
      'div',
      { className: _buttonsStyle2.default.root },
      _react2.default.createElement(
        'div',
        { className: _buttonsStyle2.default.label },
        label
      ),
      items.map((item, i) => {
        return _react2.default.createElement(
          _default2.default,
          {
            className: item == value ? _buttonsStyle2.default.selectedButton : _buttonsStyle2.default.button,
            kind: 'simple',
            key: i,
            icon: item.icon,
            onClick: this.handleClick,
            'data-index': i
          },
          item.title
        );
      })
    );
  }
}
exports.default = ToggleButtons;
ToggleButtons.propTypes = {
  label: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  value: _propTypes2.default.shape(ITEM_SHAPE),
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape(ITEM_SHAPE))
};