'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _includes2 = require('lodash/includes');

var _includes3 = _interopRequireDefault(_includes2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styleStyle = require('part:@sanity/components/selects/style-style');

var _styleStyle2 = _interopRequireDefault(_styleStyle);

var _angleDownIcon = require('part:@sanity/base/angle-down-icon');

var _angleDownIcon2 = _interopRequireDefault(_angleDownIcon);

var _reactClickOutside = require('react-click-outside');

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

var _circleThinIcon = require('part:@sanity/base/circle-thin-icon');

var _circleThinIcon2 = _interopRequireDefault(_circleThinIcon);

var _circleCheckIcon = require('part:@sanity/base/circle-check-icon');

var _circleCheckIcon2 = _interopRequireDefault(_circleCheckIcon);

var _Escapable = require('../utilities/Escapable');

var _Escapable2 = _interopRequireDefault(_Escapable);

var _default = require('part:@sanity/components/lists/default');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class StyleSelect extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.state = {
      showList: false
    }, this.handleClickOutside = () => {
      this.handleCloseList();
    }, this.handleSelect = event => {
      const index = event.currentTarget.dataset.index;
      if (!index) {
        return;
      }
      const item = this.props.items[index];
      if (!item) {
        return;
      }
      this.props.onChange(item);
      this.handleCloseList();
    }, this.handleOpenList = () => {
      this.setState({
        showList: true
      });
      this.props.onOpen();
    }, this.handleCloseList = () => {
      this.setState({
        showList: false
      });
      this.props.onClose();
    }, this.handleInnerClick = () => {
      if (this.state.showList) {
        this.handleCloseList();
      } else {
        this.handleOpenList();
      }
    }, this.handleRootKeyPress = () => {
      this.handleOpenList();
    }, _temp;
  }

  render() {
    var _props = this.props;
    const value = _props.value,
          transparent = _props.transparent,
          items = _props.items,
          className = _props.className,
          placeholder = _props.placeholder,
          renderItem = _props.renderItem;
    const showList = this.state.showList;


    return _react2.default.createElement(
      'div',
      {
        className: `${_styleStyle2.default.root} ${className || ''} ${transparent ? _styleStyle2.default.transparent : ''}`,
        onBlur: this.handleCloseList,
        onKeyPress: this.handleRootKeyPress,
        tabIndex: 0
      },
      _react2.default.createElement(
        'div',
        { className: _styleStyle2.default.inner, onClick: this.handleInnerClick },
        _react2.default.createElement(
          'div',
          { className: _styleStyle2.default.selectContainer },
          _react2.default.createElement(
            'span',
            { className: _styleStyle2.default.text },
            value && value.length > 1 && 'Multiple',
            value && value.length == 1 && value[0].title,
            !value && placeholder
          ),
          _react2.default.createElement(
            'div',
            { className: _styleStyle2.default.arrow },
            _react2.default.createElement(_angleDownIcon2.default, { color: 'inherit' })
          )
        )
      ),
      _react2.default.createElement(_Escapable2.default, { onEscape: this.handleCloseList }),
      showList && _react2.default.createElement(
        _default.List,
        { className: _styleStyle2.default.list },
        items.map((item, index) => {
          const isSemiSelected = value && value.length > 1 && (0, _includes3.default)(value, item);
          const isSelected = value && value.length === 1 && value[0] == item;
          const classNames = `
                  ${isSelected ? _styleStyle2.default.itemSelected : _styleStyle2.default.item}
                  ${isSemiSelected ? _styleStyle2.default.itemSemiSelected : ''}
                `;
          return _react2.default.createElement(
            _default.Item,
            {
              key: item.key,
              title: item.title,
              'data-index': index,
              onClick: this.handleSelect,
              className: classNames
            },
            _react2.default.createElement(
              'div',
              { className: _styleStyle2.default.itemIcon },
              isSelected && _react2.default.createElement(_circleCheckIcon2.default, null),
              isSemiSelected && _react2.default.createElement(_circleThinIcon2.default, null)
            ),
            _react2.default.createElement(
              'div',
              { className: _styleStyle2.default.itemContent },
              renderItem(item)
            )
          );
        })
      )
    );
  }
}

StyleSelect.propTypes = {
  placeholder: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  onOpen: _propTypes2.default.func,
  onClose: _propTypes2.default.func,
  value: _propTypes2.default.array,
  renderItem: _propTypes2.default.func,
  className: _propTypes2.default.string,
  transparent: _propTypes2.default.bool,
  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    title: _propTypes2.default.string,
    active: _propTypes2.default.bool
  }))
};
StyleSelect.defaultProps = {
  className: '',
  onChange() {},
  onOpen() {},
  onClose() {}
};
exports.default = (0, _reactClickOutside2.default)(StyleSelect);