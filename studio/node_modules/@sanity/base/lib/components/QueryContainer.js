'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _union2 = require('lodash/union');

var _union3 = _interopRequireDefault(_union2);

var _throttle2 = require('lodash/throttle');

var _throttle3 = _interopRequireDefault(_throttle2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _document = require('part:@sanity/base/datastore/document');

var _document2 = _interopRequireDefault(_document);

var _shallowEquals = require('shallow-equals');

var _shallowEquals2 = _interopRequireDefault(_shallowEquals);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function deprecatedCheck(props, propName, componentName, ...rest) {
  if (_react2.default.isValidElement(props[propName])) {
    return new Error(`Passing a React element as ${propName} to ${componentName} is deprecated. Use a function instead.`);
  }
  return _propTypes2.default.func.isRequired(props, propName, componentName, ...rest);
}

function createInitialState() {
  return {
    result: null,
    complete: false,
    loading: true,
    error: false
  };
}

function keysEqual(object, otherObject, excludeKeys = []) {
  const objectKeys = Object.keys(object).filter(key => !excludeKeys.includes(key));
  const otherObjectKeys = Object.keys(otherObject).filter(key => !excludeKeys.includes(key));

  if (objectKeys.length !== otherObjectKeys.length) {
    return false;
  }

  return (0, _union3.default)(objectKeys, otherObjectKeys).every(key => object[key] === otherObject[key]);
}

const RESPOND_TO_TRANSITIONS = ['appear', 'disappear', 'update' // todo: remove this
];

class QueryContainer extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.state = createInitialState(), this.next = event => {
      switch (event.type) {
        case 'snapshot':
          {
            this.setState({ error: null, loading: false, result: { documents: event.documents } });
            break;
          }
        case 'mutation':
          {
            this.receiveMutations(event);
            break;
          }
        default:
      }
    }, this.error = error => {
      // @todo make sure some kind of error dialog is shown, somewhere
      console.error(error); // eslint-disable-line no-console
      this.setState({ error, loading: false });
    }, this.complete = () => {
      this.setState({ complete: true, loading: false });
    }, this.refresh = (0, _throttle3.default)(() => {
      this.subscribe(this.props.query, this.props.params);
    }, 1000, { leading: true, trailing: true }), _temp;
  }

  componentWillMount() {
    this.subscribe(this.props.query, this.props.params);
  }

  componentWillUnmount() {
    this.unsubscribe();
  }

  subscribe(query, params) {
    this.unsubscribe();
    this._subscription = _document2.default.query(query, params).filter(event => event.type === 'snapshot' || RESPOND_TO_TRANSITIONS.includes(event.transition)).subscribe(this);
  }

  receiveMutations(event) {
    // todo: apply mutations on this.state.collection
    // just resubcribing for now.
    /*
    const exampleEvent = {
      type: 'mutation',
      eventId: 'yr50wh-mzc-lby-hcf-3zumkc867#public/hi3HUGlrHu2c292ZddrZes',
      documentId: 'public/hi3HUGlrHu2c292ZddrZes',
      transactionId: 'yr50wh-mzc-lby-hcf-3zumkc867',
      transition: 'disappear',
      identity: 'Z29vZ2xlX29hdXRoMjo6MTA2MTc2MDY5MDI1MDA3MzA5MTAwOjozMjM=',
      mutations: [
        {
          delete: {
            id: 'public/hi3HUGlrHu2c292ZddrZes'
          }
        }
      ],
      previousRev: 'm5qsec-ovr-cv8-i1q-qck9otism',
      resultRev: 'yr50wh-mzc-lby-hcf-3zumkc867',
      timestamp: '2016-12-22T12:24:02.433897Z'
    }
     */
    const result = this.state.result;


    const hasCreateOrDelete = event.type === 'mutation' && event.mutations.some(mut => mut.create || mut.delete && (result.documents || []).some(doc => doc._id === mut.delete.id));

    if (hasCreateOrDelete) {
      this.refresh();
      this.refresh(); // invoke on both ends to make sure we get the refreshed result
    }
  }

  unsubscribe() {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }
  }

  componentWillUpdate(nextProps) {
    const sameQuery = nextProps.query === this.props.query;
    const sameParams = (0, _shallowEquals2.default)(nextProps.params, this.props.params);

    if (!sameQuery || !sameParams) {
      this.setState(createInitialState());
      this.subscribe(nextProps.query, nextProps.params);
    }
  }

  shouldComponentUpdate(nextProps, nextState) {
    if (!(0, _shallowEquals2.default)(this.state, nextState)) {
      return true;
    }
    if (nextProps.query !== this.props.query || !(0, _shallowEquals2.default)(nextProps.params, this.props.params)) {
      return true;
    }

    return !keysEqual(nextProps, this.props, ['mapFn', 'query', 'params']);
  }

  renderDeprecated() {
    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), this.props.mapFn(this.state));
  }

  render() {
    var _props = this.props;

    const children = _props.children,
          mapFn = _props.mapFn,
          rest = _objectWithoutProperties(_props, ['children', 'mapFn']);

    if (_react2.default.isValidElement(children)) {
      return this.renderDeprecated();
    }
    if (!children || typeof children !== 'function') {
      return _react2.default.createElement(
        'div',
        null,
        'Invalid usage of QueryContainer. Expected a function as its only child'
      );
    }
    return children(_extends({}, rest, { onRetry: this.refresh }, mapFn(this.state)));
  }
}
exports.default = QueryContainer;
QueryContainer.propTypes = {
  query: _propTypes2.default.string,
  params: _propTypes2.default.object,
  mapFn: _propTypes2.default.func,
  children: deprecatedCheck
};
QueryContainer.defaultProps = {
  mapFn: props => props
};